// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import frc.robot.subsystems.*;

/**
 *
 */
public class AutonomousBouncePath extends AutoWithInit {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutonomousBouncePath() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
 
    }
    @Override
    public void initializeCommands(){
        MultiPartPath path = new MultiPartPath(0);

        path.addRawArc(290, 0.10, 0.48, false);
        //path.addStop();
        path.addStraight(5, true, 245);

        path.addRawArc(160, 0.00, 0.59, false, true);
        path.addStraight(10.5, true, 90, 0.8);
        path.atSpeed(0.1);
        path.addStraight(5, false, 91, 1);
        path.addRawArc(350, 0.239, 0.55, false, false);
        path.addStraight(10, false, 270, 0.6);
        path.addRawArc(200, 0.12, 0.48, false, true);
        path.addStraight(3, true, 180, 1);

        addSequential(path.finalizePath());
       
       

       
    }
}