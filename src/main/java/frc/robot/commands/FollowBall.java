// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import java.util.List;

import frc.robot.Robot;
import frc.robot.subsystems.PixyObject;

/**
 *
 */
public class FollowBall extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public FollowBall() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    DriveToObject targetTracker;
    @Override
    protected void initialize() {

        targetTracker=new DriveToObject(pVal, forwardMod, maxTurn, stopWidth,proxPVal);
        targetTracker.setOffset(7);
        Robot.pixy.setObjectsToSee(true);

    }


    

    final static int camWidth=315;
    final static int camHeight=207;
    
    double turnValue=0;
    double forwardValue=0;
    double maxTurn=0.5;
    double pVal=0.5;
    double proxPVal=0.07*0;
    double stopWidth=40*0;
    double forwardMod=0.25;
    boolean fullAuto=true;
    boolean shouldStop=false;
    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        List<PixyObject> objects=Robot.pixy.readObjects();

        if(objects.size()>=1){
            System.out.println("y");
            PixyObject object=objects.get(0);
            
            double[] speeds=targetTracker.execute(object.x,object.width);
            turnValue=speeds[0];
            forwardValue=speeds[1];
        }else{
            if(turnValue<0){
                turnValue=-maxTurn*0.75;
            }else if(turnValue>0){
                turnValue=maxTurn*0.75;
            }
            forwardValue=0;
            if(!fullAuto)turnValue=-Robot.oi.getRightJoystick().getTwist();
        }
        if(!fullAuto)forwardValue=-Robot.oi.getRightJoystick().getY();

        Robot.drivetrain.drive(forwardValue, turnValue);

        //Robot.joystickControl.updateAllButWheels();

    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        
        return shouldStop || !Robot.oi.getRightJoystick().getRawButton(3);
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {

    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
